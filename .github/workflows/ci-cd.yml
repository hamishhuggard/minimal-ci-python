name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  ci:
    name: Lint • Type-check • Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12", "3.11" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Lint with flake8
        run: flake8 src tests

      - name: Type-check with mypy
        run: mypy src

      - name: Run tests
        run: pytest -q

  deploy:
    name: Deploy to DigitalOcean VPS
    needs: ci
    runs-on: ubuntu-latest
    if: needs.ci.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Sync code to server
        run: |
          rsync -avz --delete \
            ./src/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/home/${{ secrets.DEPLOY_USER }}/app/src/
          rsync -avz --delete \
            requirements.txt ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/home/${{ secrets.DEPLOY_USER }}/app/

      - name: Install & restart service
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            cd /home/${{ secrets.DEPLOY_USER }}/app
            python3 -m venv .venv
            source .venv/bin/activate
            pip install -r requirements.txt
            sudo systemctl restart myapp.service
          EOF
